/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package System;


import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;



/**
 *
 * @author valen
 */
public class DataBase extends javax.swing.JFrame {
        
    DefaultTableModel dtm;
    DefaultComboBoxModel dcbm;
    JComboBox comb;
    String opciones[] = new String[8];
    Conexion conexion = new Conexion();
    Random rndm = new Random();
    ResultSet rs;
    ArrayList Encabezado = new ArrayList();
    ArrayList tipoDato = new ArrayList();
    JFileChooser choose = new JFileChooser();
    
    /**
     * Creates new form DataBase
     */
    @SuppressWarnings("empty-statement")
    public DataBase() {
        opciones[0] = "Name";
        opciones[1] = "Surname";
        opciones[2] = "Email";
        opciones[3] = "Address";
        opciones[4] = "City";
        opciones[5] = "Postal_Code";
        opciones[6] = "Region";
        opciones[7] = "Country";
        
        
        dcbm = new DefaultComboBoxModel(opciones);
        comb = new JComboBox(dcbm);
        
        initComponents();
        
        TableColumn tc = tabla.getColumnModel().getColumn(1);
                tc.setCellEditor(new DefaultCellEditor(comb));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        namebase = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        rbSQL = new javax.swing.JRadioButton();
        rbCSV = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("DataBase Name");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 120, 30));

        namebase.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                namebaseKeyReleased(evt);
            }
        });
        jPanel1.add(namebase, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 180, 40));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Columns");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 50, 70, 30));

        jTextField2.setEnabled(false);
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 50, 180, 40));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        //String[][]celdas = new String[0][2];

        dtm = new DefaultTableModel(new Object [][] {
        },
        new String [] {
            "Column Name", "Data Type"
        });
        tabla.setModel(dtm);
        jScrollPane1.setViewportView(tabla);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 670, 220));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 690, 240));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Accept");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 50, -1, 40));

        buttonGroup1.add(rbSQL);
        rbSQL.setText("SQL");
        jPanel1.add(rbSQL, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 410, -1, -1));

        buttonGroup1.add(rbCSV);
        rbCSV.setText("CSV");
        jPanel1.add(rbCSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 410, -1, -1));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Generate File");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 400, -1, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 760, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void namebaseKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_namebaseKeyReleased
        //String nameDB = jTextField1.getText();
        if(namebase.getText().equals("") || namebase.getText() == null){
            jTextField2.setText(null);
            jTextField2.setEnabled(false);
        }else if(!namebase.getText().equals("") || namebase.getText() != null){
            jTextField2.setEnabled(true);
        }
        
    }//GEN-LAST:event_namebaseKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(namebase.getText().equals("") || jTextField2.getText().equals("")){
            
            JOptionPane.showMessageDialog(null, "Necesitas llenar los dos campos para continuar");
            
        }else{
            int files = Integer.parseInt(jTextField2.getText());
            //JOptionPane.showMessageDialog(null, files);
           for(int x=0;x<files;x++){
               dtm.addRow(new Object[]{""});
           }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        TableModel modeloT = tabla.getModel();//Obtener modelo de tabla
        int columna = modeloT.getColumnCount();//Obtener numero de columnas
        int fila = modeloT.getRowCount();//Obtener numero de filas
        String nombrebase = namebase.getText();
        String consulta = "";
        String cadenas;
        
        if(fila>0)//Si hay filas en la tabla
        {
            /////////////////////////////////////////////////////////////////////////////7
            ObtenerDatos(fila, columna, modeloT);
            ////////////////CREACION DE BASE///////////////////////////////////////////////////////
            String acumula="";
            cadenas = cadenaConsulta(tipoDato);
            conexion.insertar("CREATE DATABASE "+nombrebase);
            conexion.insertar("DROP VIEW IF EXISTS v_tipodato");
            conexion.insertar("CREATE VIEW v_tipodato AS SELECT "+tipoDato.get(0)+""+cadenas+" FROM informacion");
            //JOptionPane.showMessageDialog(null, "Hecho");
            for(int w=1;w<Encabezado.size();w++)
            {
                        acumula+=","+Encabezado.get(w)+" varchar(51)";
            }
            conexion.parameter(nombrebase);
            //JOptionPane.showMessageDialog(null,"CREATE TABLE Datos ("+Encabezado.get(0)+" varchar(30)"+acumula+")");
            conexion.crear("CREATE TABLE Datos ("+Encabezado.get(0)+" varchar(51)"+acumula+")");
            conexion.crear("CREATE TABLE uno (abc varchar(20))");
            
            
            conexion.crear("CREATE PROCEDURE inserciones_sp(IN numero INT) "
                    + "BEGIN "
                    + "INSERT INTO Datos SELECT * FROM registros.v_tipodato LIMIT numero,2; "
                    + "INSERT INTO Datos SELECT * FROM Datos;"
                    + "END");
            
            
            
            /*conexion.crear("CREATE TRIGGER t_uno AFTER INSERT ON uno "
                    + "FOR EACH ROW "
                    + "BEGIN "
                    //+ "DECLARE x INT DEFAULT 1; "
                    //+ "WHILE x<1 DO "
                    + "INSERT INTO Datos SELECT * FROM Datos; "
                    //+ "SET x=x+1; "
                    //+ "END WHILE;"
                    + "END");*/
            //JOptionPane.showMessageDialog(null, "Hecho");
            //JOptionPane.showMessageDialog(null, (rndm.nextInt(300-1+1)+1));
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            long start = System.currentTimeMillis();
            for(int d=18;d>0;d--)
            {
                insercion();
            }
            //conexion.crear("INSERT INTO uno SELECT name FROM registros.v_tipodato LIMIT 1,1");
            long stop = System.currentTimeMillis();
            long tiempo = (stop - start)/1000;
            JOptionPane.showMessageDialog(null, "Base creada. Tiempo: "+tiempo+" s.");
            
            /////////////////////////////////////////////////////////////////////////////
            radios(nombrebase);
        }
        else//Si no hay filas en la tabla
        {
            JOptionPane.showMessageDialog(null, "No hay datos.");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataBase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataBase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataBase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataBase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataBase().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField namebase;
    private javax.swing.JRadioButton rbCSV;
    private javax.swing.JRadioButton rbSQL;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables

    public String cadenaConsulta(ArrayList datos)
    {
        String a="";
        for(int f=1;f<datos.size();f++)
        {
            a+=","+datos.get(f);
        }
        return a;
    }
    
    public void insercion()
    {
        conexion.crear("CALL inserciones_sp("+(rndm.nextInt(300-1+1)+1)+")");
               
    }
    public void ObtenerDatos(int fila,int columna,TableModel modeloT)
    {
        for(int x=0;x<fila;x++)//Obtiene los datos de la tabla
                {
                    for(int y=0;y<columna;y++)
                    {
                        if(y==1)
                        {
                            tipoDato.add(modeloT.getValueAt(x,y));
                        }
                        else
                        {
                            Encabezado.add(modeloT.getValueAt(x,y));
                        }
                        
                    }
                }
    }
    
    public void radios(String xx)
    {
        if(rbSQL.isSelected())//Si selecciona radioButton SQL
            {
                crearBackUp(xx);
            }
            else if(rbCSV.isSelected())//Si selecciona radioButton CSV
            {
                String nombreArchivo = "C:/"+xx+".csv";
                conexion.abcd(nombreArchivo);
                  
            }
            else//Si no selecciona ningun radiobutton
            {
                JOptionPane.showMessageDialog(null, "Selecciona el tipo de archivo a generar.");
            }
    }
    
    public void crearBackUp(String archivo)
    {
        int res;
        
        res = choose.showSaveDialog(this);
        
        if(res==JFileChooser.APPROVE_OPTION)
        {
            try
            {
                Runtime rt = Runtime.getRuntime();
                File file = new File(String.valueOf(choose.getSelectedFile().toString())+".sql");
                FileWriter fw = new FileWriter(file);
                Process pro = rt.exec("C:\\wamp\\bin\\mysql\\mysql5.6.17\\bin"
                        +"\\mysqldump --opt --user=root --password=  --databases "+archivo+" -R");
                
                InputStreamReader isre = new InputStreamReader(pro.getInputStream());
                BufferedReader bure = new BufferedReader(isre);
                
                String linea;
                while((linea=bure.readLine()) != null)
                {
                    fw.write(linea+"\n");
                }
                fw.close();
                isre.close();
                bure.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            JOptionPane.showMessageDialog(null, "Archivo creado");
        }else if(res==JFileChooser.CANCEL_OPTION)
        {
            JOptionPane.showMessageDialog(null, "No se genero el archivo");
        }
    }
    
    
}
